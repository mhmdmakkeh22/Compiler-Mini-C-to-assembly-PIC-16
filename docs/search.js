window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"compilation": {"fullname": "compilation", "modulename": "compilation", "kind": "module", "doc": "<p></p>\n"}, "compilation.token_specification": {"fullname": "compilation.token_specification", "modulename": "compilation", "qualname": "token_specification", "kind": "variable", "doc": "<p></p>\n", "default_value": "[(&#x27;\\\\s+&#x27;, None), (&#x27;//.*&#x27;, None), (&#x27;/\\\\*[\\\\s\\\\S]*?\\\\*/&#x27;, None), (&#x27;\\\\bint\\\\b&#x27;, &#x27;KW_INT&#x27;), (&#x27;\\\\bfloat\\\\b&#x27;, &#x27;KW_FLOAT&#x27;), (&#x27;\\\\bbool\\\\b&#x27;, &#x27;KW_BOOL&#x27;), (&#x27;\\\\bchar\\\\b&#x27;, &#x27;KW_CHAR&#x27;), (&#x27;\\\\bif\\\\b&#x27;, &#x27;KW_IF&#x27;), (&#x27;\\\\belse\\\\b&#x27;, &#x27;KW_ELSE&#x27;), (&#x27;\\\\bwhile\\\\b&#x27;, &#x27;KW_WHILE&#x27;), (&#x27;\\\\bmain\\\\b&#x27;, &#x27;KW_MAIN&#x27;), (&#x27;\\\\d+&#x27;, &#x27;INT_LITERAL&#x27;), (&#x27;[A-Za-z_]\\\\w*&#x27;, &#x27;IDENT&#x27;), (&#x27;\\\\(&#x27;, &#x27;LPAREN&#x27;), (&#x27;\\\\)&#x27;, &#x27;RPAREN&#x27;), (&#x27;\\\\{&#x27;, &#x27;LBRACE&#x27;), (&#x27;\\\\}&#x27;, &#x27;RBRACE&#x27;), (&#x27;\\\\[&#x27;, &#x27;LBRACKET&#x27;), (&#x27;\\\\]&#x27;, &#x27;RBRACKET&#x27;), (&#x27;;&#x27;, &#x27;SEMICOLON&#x27;), (&#x27;,&#x27;, &#x27;COMMA&#x27;), (&#x27;\\\\|\\\\|&#x27;, &#x27;OR&#x27;), (&#x27;&amp;&amp;&#x27;, &#x27;AND&#x27;), (&#x27;==&#x27;, &#x27;EQ&#x27;), (&#x27;!=&#x27;, &#x27;NEQ&#x27;), (&#x27;&lt;=&#x27;, &#x27;LTE&#x27;), (&#x27;&gt;=&#x27;, &#x27;GTE&#x27;), (&#x27;&lt;&#x27;, &#x27;LT&#x27;), (&#x27;&gt;&#x27;, &#x27;GT&#x27;), (&#x27;=&#x27;, &#x27;ASSIGN&#x27;), (&#x27;\\\\+&#x27;, &#x27;PLUS&#x27;), (&#x27;-&#x27;, &#x27;MINUS&#x27;), (&#x27;\\\\*&#x27;, &#x27;MULT&#x27;), (&#x27;/&#x27;, &#x27;DIV&#x27;), (&#x27;!&#x27;, &#x27;NOT&#x27;)]"}, "compilation.Token": {"fullname": "compilation.Token", "modulename": "compilation", "qualname": "Token", "kind": "class", "doc": "<p></p>\n"}, "compilation.Token.__init__": {"fullname": "compilation.Token.__init__", "modulename": "compilation", "qualname": "Token.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">line</span>, </span><span class=\"param\"><span class=\"n\">col</span></span>)</span>"}, "compilation.Token.type": {"fullname": "compilation.Token.type", "modulename": "compilation", "qualname": "Token.type", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Token.value": {"fullname": "compilation.Token.value", "modulename": "compilation", "qualname": "Token.value", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Token.line": {"fullname": "compilation.Token.line", "modulename": "compilation", "qualname": "Token.line", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Token.col": {"fullname": "compilation.Token.col", "modulename": "compilation", "qualname": "Token.col", "kind": "variable", "doc": "<p></p>\n"}, "compilation.MiniCLexer": {"fullname": "compilation.MiniCLexer", "modulename": "compilation", "qualname": "MiniCLexer", "kind": "class", "doc": "<p></p>\n"}, "compilation.MiniCLexer.__init__": {"fullname": "compilation.MiniCLexer.__init__", "modulename": "compilation", "qualname": "MiniCLexer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">code</span></span>)</span>"}, "compilation.MiniCLexer.code": {"fullname": "compilation.MiniCLexer.code", "modulename": "compilation", "qualname": "MiniCLexer.code", "kind": "variable", "doc": "<p></p>\n"}, "compilation.MiniCLexer.big_regex": {"fullname": "compilation.MiniCLexer.big_regex", "modulename": "compilation", "qualname": "MiniCLexer.big_regex", "kind": "variable", "doc": "<p></p>\n"}, "compilation.MiniCLexer.tokenize": {"fullname": "compilation.MiniCLexer.tokenize", "modulename": "compilation", "qualname": "MiniCLexer.tokenize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.ASTNode": {"fullname": "compilation.ASTNode", "modulename": "compilation", "qualname": "ASTNode", "kind": "class", "doc": "<p></p>\n"}, "compilation.ASTNode.accept": {"fullname": "compilation.ASTNode.accept", "modulename": "compilation", "qualname": "ASTNode.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Program": {"fullname": "compilation.Program", "modulename": "compilation", "qualname": "Program", "kind": "class", "doc": "<p></p>\n", "bases": "ASTNode"}, "compilation.Program.__init__": {"fullname": "compilation.Program.__init__", "modulename": "compilation", "qualname": "Program.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">declarations</span>, </span><span class=\"param\"><span class=\"n\">statements</span></span>)</span>"}, "compilation.Program.declarations": {"fullname": "compilation.Program.declarations", "modulename": "compilation", "qualname": "Program.declarations", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Program.statements": {"fullname": "compilation.Program.statements", "modulename": "compilation", "qualname": "Program.statements", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Program.accept": {"fullname": "compilation.Program.accept", "modulename": "compilation", "qualname": "Program.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Block": {"fullname": "compilation.Block", "modulename": "compilation", "qualname": "Block", "kind": "class", "doc": "<p></p>\n", "bases": "ASTNode"}, "compilation.Block.__init__": {"fullname": "compilation.Block.__init__", "modulename": "compilation", "qualname": "Block.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">declarations</span>, </span><span class=\"param\"><span class=\"n\">statements</span></span>)</span>"}, "compilation.Block.declarations": {"fullname": "compilation.Block.declarations", "modulename": "compilation", "qualname": "Block.declarations", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Block.statements": {"fullname": "compilation.Block.statements", "modulename": "compilation", "qualname": "Block.statements", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Block.accept": {"fullname": "compilation.Block.accept", "modulename": "compilation", "qualname": "Block.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Declaration": {"fullname": "compilation.Declaration", "modulename": "compilation", "qualname": "Declaration", "kind": "class", "doc": "<p></p>\n", "bases": "ASTNode"}, "compilation.Declaration.__init__": {"fullname": "compilation.Declaration.__init__", "modulename": "compilation", "qualname": "Declaration.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">var_type</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">array_size</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "compilation.Declaration.var_type": {"fullname": "compilation.Declaration.var_type", "modulename": "compilation", "qualname": "Declaration.var_type", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Declaration.name": {"fullname": "compilation.Declaration.name", "modulename": "compilation", "qualname": "Declaration.name", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Declaration.array_size": {"fullname": "compilation.Declaration.array_size", "modulename": "compilation", "qualname": "Declaration.array_size", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Declaration.accept": {"fullname": "compilation.Declaration.accept", "modulename": "compilation", "qualname": "Declaration.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Statement": {"fullname": "compilation.Statement", "modulename": "compilation", "qualname": "Statement", "kind": "class", "doc": "<p></p>\n", "bases": "ASTNode"}, "compilation.AssignmentStatement": {"fullname": "compilation.AssignmentStatement", "modulename": "compilation", "qualname": "AssignmentStatement", "kind": "class", "doc": "<p></p>\n", "bases": "Statement"}, "compilation.AssignmentStatement.__init__": {"fullname": "compilation.AssignmentStatement.__init__", "modulename": "compilation", "qualname": "AssignmentStatement.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">index_expr</span>, </span><span class=\"param\"><span class=\"n\">rhs</span></span>)</span>"}, "compilation.AssignmentStatement.name": {"fullname": "compilation.AssignmentStatement.name", "modulename": "compilation", "qualname": "AssignmentStatement.name", "kind": "variable", "doc": "<p></p>\n"}, "compilation.AssignmentStatement.index_expr": {"fullname": "compilation.AssignmentStatement.index_expr", "modulename": "compilation", "qualname": "AssignmentStatement.index_expr", "kind": "variable", "doc": "<p></p>\n"}, "compilation.AssignmentStatement.rhs": {"fullname": "compilation.AssignmentStatement.rhs", "modulename": "compilation", "qualname": "AssignmentStatement.rhs", "kind": "variable", "doc": "<p></p>\n"}, "compilation.AssignmentStatement.accept": {"fullname": "compilation.AssignmentStatement.accept", "modulename": "compilation", "qualname": "AssignmentStatement.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.IfStatement": {"fullname": "compilation.IfStatement", "modulename": "compilation", "qualname": "IfStatement", "kind": "class", "doc": "<p></p>\n", "bases": "Statement"}, "compilation.IfStatement.__init__": {"fullname": "compilation.IfStatement.__init__", "modulename": "compilation", "qualname": "IfStatement.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">condition</span>, </span><span class=\"param\"><span class=\"n\">then_block</span>, </span><span class=\"param\"><span class=\"n\">else_block</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "compilation.IfStatement.condition": {"fullname": "compilation.IfStatement.condition", "modulename": "compilation", "qualname": "IfStatement.condition", "kind": "variable", "doc": "<p></p>\n"}, "compilation.IfStatement.then_block": {"fullname": "compilation.IfStatement.then_block", "modulename": "compilation", "qualname": "IfStatement.then_block", "kind": "variable", "doc": "<p></p>\n"}, "compilation.IfStatement.else_block": {"fullname": "compilation.IfStatement.else_block", "modulename": "compilation", "qualname": "IfStatement.else_block", "kind": "variable", "doc": "<p></p>\n"}, "compilation.IfStatement.accept": {"fullname": "compilation.IfStatement.accept", "modulename": "compilation", "qualname": "IfStatement.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.WhileStatement": {"fullname": "compilation.WhileStatement", "modulename": "compilation", "qualname": "WhileStatement", "kind": "class", "doc": "<p></p>\n", "bases": "Statement"}, "compilation.WhileStatement.__init__": {"fullname": "compilation.WhileStatement.__init__", "modulename": "compilation", "qualname": "WhileStatement.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">condition</span>, </span><span class=\"param\"><span class=\"n\">body</span></span>)</span>"}, "compilation.WhileStatement.condition": {"fullname": "compilation.WhileStatement.condition", "modulename": "compilation", "qualname": "WhileStatement.condition", "kind": "variable", "doc": "<p></p>\n"}, "compilation.WhileStatement.body": {"fullname": "compilation.WhileStatement.body", "modulename": "compilation", "qualname": "WhileStatement.body", "kind": "variable", "doc": "<p></p>\n"}, "compilation.WhileStatement.accept": {"fullname": "compilation.WhileStatement.accept", "modulename": "compilation", "qualname": "WhileStatement.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Expression": {"fullname": "compilation.Expression", "modulename": "compilation", "qualname": "Expression", "kind": "class", "doc": "<p></p>\n", "bases": "ASTNode"}, "compilation.BinaryOp": {"fullname": "compilation.BinaryOp", "modulename": "compilation", "qualname": "BinaryOp", "kind": "class", "doc": "<p></p>\n", "bases": "Expression"}, "compilation.BinaryOp.__init__": {"fullname": "compilation.BinaryOp.__init__", "modulename": "compilation", "qualname": "BinaryOp.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"n\">left</span>, </span><span class=\"param\"><span class=\"n\">right</span></span>)</span>"}, "compilation.BinaryOp.op": {"fullname": "compilation.BinaryOp.op", "modulename": "compilation", "qualname": "BinaryOp.op", "kind": "variable", "doc": "<p></p>\n"}, "compilation.BinaryOp.left": {"fullname": "compilation.BinaryOp.left", "modulename": "compilation", "qualname": "BinaryOp.left", "kind": "variable", "doc": "<p></p>\n"}, "compilation.BinaryOp.right": {"fullname": "compilation.BinaryOp.right", "modulename": "compilation", "qualname": "BinaryOp.right", "kind": "variable", "doc": "<p></p>\n"}, "compilation.BinaryOp.accept": {"fullname": "compilation.BinaryOp.accept", "modulename": "compilation", "qualname": "BinaryOp.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.UnaryOp": {"fullname": "compilation.UnaryOp", "modulename": "compilation", "qualname": "UnaryOp", "kind": "class", "doc": "<p></p>\n", "bases": "Expression"}, "compilation.UnaryOp.__init__": {"fullname": "compilation.UnaryOp.__init__", "modulename": "compilation", "qualname": "UnaryOp.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">op</span>, </span><span class=\"param\"><span class=\"n\">expr</span></span>)</span>"}, "compilation.UnaryOp.op": {"fullname": "compilation.UnaryOp.op", "modulename": "compilation", "qualname": "UnaryOp.op", "kind": "variable", "doc": "<p></p>\n"}, "compilation.UnaryOp.expr": {"fullname": "compilation.UnaryOp.expr", "modulename": "compilation", "qualname": "UnaryOp.expr", "kind": "variable", "doc": "<p></p>\n"}, "compilation.UnaryOp.accept": {"fullname": "compilation.UnaryOp.accept", "modulename": "compilation", "qualname": "UnaryOp.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Literal": {"fullname": "compilation.Literal", "modulename": "compilation", "qualname": "Literal", "kind": "class", "doc": "<p></p>\n", "bases": "Expression"}, "compilation.Literal.__init__": {"fullname": "compilation.Literal.__init__", "modulename": "compilation", "qualname": "Literal.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span>)</span>"}, "compilation.Literal.value": {"fullname": "compilation.Literal.value", "modulename": "compilation", "qualname": "Literal.value", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Literal.accept": {"fullname": "compilation.Literal.accept", "modulename": "compilation", "qualname": "Literal.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Identifier": {"fullname": "compilation.Identifier", "modulename": "compilation", "qualname": "Identifier", "kind": "class", "doc": "<p></p>\n", "bases": "Expression"}, "compilation.Identifier.__init__": {"fullname": "compilation.Identifier.__init__", "modulename": "compilation", "qualname": "Identifier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">index_expr</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "compilation.Identifier.name": {"fullname": "compilation.Identifier.name", "modulename": "compilation", "qualname": "Identifier.name", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Identifier.index_expr": {"fullname": "compilation.Identifier.index_expr", "modulename": "compilation", "qualname": "Identifier.index_expr", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Identifier.accept": {"fullname": "compilation.Identifier.accept", "modulename": "compilation", "qualname": "Identifier.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parenthesized": {"fullname": "compilation.Parenthesized", "modulename": "compilation", "qualname": "Parenthesized", "kind": "class", "doc": "<p></p>\n", "bases": "Expression"}, "compilation.Parenthesized.__init__": {"fullname": "compilation.Parenthesized.__init__", "modulename": "compilation", "qualname": "Parenthesized.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">expr</span></span>)</span>"}, "compilation.Parenthesized.expr": {"fullname": "compilation.Parenthesized.expr", "modulename": "compilation", "qualname": "Parenthesized.expr", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Parenthesized.accept": {"fullname": "compilation.Parenthesized.accept", "modulename": "compilation", "qualname": "Parenthesized.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">visitor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.ParsingException": {"fullname": "compilation.ParsingException", "modulename": "compilation", "qualname": "ParsingException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, "compilation.Parser": {"fullname": "compilation.Parser", "modulename": "compilation", "qualname": "Parser", "kind": "class", "doc": "<p></p>\n"}, "compilation.Parser.__init__": {"fullname": "compilation.Parser.__init__", "modulename": "compilation", "qualname": "Parser.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tokens</span></span>)</span>"}, "compilation.Parser.tokens": {"fullname": "compilation.Parser.tokens", "modulename": "compilation", "qualname": "Parser.tokens", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Parser.index": {"fullname": "compilation.Parser.index", "modulename": "compilation", "qualname": "Parser.index", "kind": "variable", "doc": "<p></p>\n"}, "compilation.Parser.peek": {"fullname": "compilation.Parser.peek", "modulename": "compilation", "qualname": "Parser.peek", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.peek_type": {"fullname": "compilation.Parser.peek_type", "modulename": "compilation", "qualname": "Parser.peek_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.accept": {"fullname": "compilation.Parser.accept", "modulename": "compilation", "qualname": "Parser.accept", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.expect": {"fullname": "compilation.Parser.expect", "modulename": "compilation", "qualname": "Parser.expect", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.finished": {"fullname": "compilation.Parser.finished", "modulename": "compilation", "qualname": "Parser.finished", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.error": {"fullname": "compilation.Parser.error", "modulename": "compilation", "qualname": "Parser.error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse": {"fullname": "compilation.Parser.parse", "modulename": "compilation", "qualname": "Parser.parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_program": {"fullname": "compilation.Parser.parse_program", "modulename": "compilation", "qualname": "Parser.parse_program", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_declaration": {"fullname": "compilation.Parser.parse_declaration", "modulename": "compilation", "qualname": "Parser.parse_declaration", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_type": {"fullname": "compilation.Parser.parse_type", "modulename": "compilation", "qualname": "Parser.parse_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_statement": {"fullname": "compilation.Parser.parse_statement", "modulename": "compilation", "qualname": "Parser.parse_statement", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_assignment": {"fullname": "compilation.Parser.parse_assignment", "modulename": "compilation", "qualname": "Parser.parse_assignment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_if": {"fullname": "compilation.Parser.parse_if", "modulename": "compilation", "qualname": "Parser.parse_if", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_while": {"fullname": "compilation.Parser.parse_while", "modulename": "compilation", "qualname": "Parser.parse_while", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_block": {"fullname": "compilation.Parser.parse_block", "modulename": "compilation", "qualname": "Parser.parse_block", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_expression": {"fullname": "compilation.Parser.parse_expression", "modulename": "compilation", "qualname": "Parser.parse_expression", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_or": {"fullname": "compilation.Parser.parse_or", "modulename": "compilation", "qualname": "Parser.parse_or", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_and": {"fullname": "compilation.Parser.parse_and", "modulename": "compilation", "qualname": "Parser.parse_and", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_equality": {"fullname": "compilation.Parser.parse_equality", "modulename": "compilation", "qualname": "Parser.parse_equality", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_relational": {"fullname": "compilation.Parser.parse_relational", "modulename": "compilation", "qualname": "Parser.parse_relational", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_additive": {"fullname": "compilation.Parser.parse_additive", "modulename": "compilation", "qualname": "Parser.parse_additive", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_multiplicative": {"fullname": "compilation.Parser.parse_multiplicative", "modulename": "compilation", "qualname": "Parser.parse_multiplicative", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_unary": {"fullname": "compilation.Parser.parse_unary", "modulename": "compilation", "qualname": "Parser.parse_unary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Parser.parse_primary": {"fullname": "compilation.Parser.parse_primary", "modulename": "compilation", "qualname": "Parser.parse_primary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.Visitor": {"fullname": "compilation.Visitor", "modulename": "compilation", "qualname": "Visitor", "kind": "class", "doc": "<p></p>\n"}, "compilation.CodeGenVisitor": {"fullname": "compilation.CodeGenVisitor", "modulename": "compilation", "qualname": "CodeGenVisitor", "kind": "class", "doc": "<p></p>\n", "bases": "Visitor"}, "compilation.CodeGenVisitor.code": {"fullname": "compilation.CodeGenVisitor.code", "modulename": "compilation", "qualname": "CodeGenVisitor.code", "kind": "variable", "doc": "<p></p>\n"}, "compilation.CodeGenVisitor.var_map": {"fullname": "compilation.CodeGenVisitor.var_map", "modulename": "compilation", "qualname": "CodeGenVisitor.var_map", "kind": "variable", "doc": "<p></p>\n"}, "compilation.CodeGenVisitor.next_addr": {"fullname": "compilation.CodeGenVisitor.next_addr", "modulename": "compilation", "qualname": "CodeGenVisitor.next_addr", "kind": "variable", "doc": "<p></p>\n"}, "compilation.CodeGenVisitor.label_counter": {"fullname": "compilation.CodeGenVisitor.label_counter", "modulename": "compilation", "qualname": "CodeGenVisitor.label_counter", "kind": "variable", "doc": "<p></p>\n"}, "compilation.CodeGenVisitor.emit": {"fullname": "compilation.CodeGenVisitor.emit", "modulename": "compilation", "qualname": "CodeGenVisitor.emit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.make_label": {"fullname": "compilation.CodeGenVisitor.make_label", "modulename": "compilation", "qualname": "CodeGenVisitor.make_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;lbl&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.get_code": {"fullname": "compilation.CodeGenVisitor.get_code", "modulename": "compilation", "qualname": "CodeGenVisitor.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.alloc_var": {"fullname": "compilation.CodeGenVisitor.alloc_var", "modulename": "compilation", "qualname": "CodeGenVisitor.alloc_var", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitProgram": {"fullname": "compilation.CodeGenVisitor.visitProgram", "modulename": "compilation", "qualname": "CodeGenVisitor.visitProgram", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitBlock": {"fullname": "compilation.CodeGenVisitor.visitBlock", "modulename": "compilation", "qualname": "CodeGenVisitor.visitBlock", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitDeclaration": {"fullname": "compilation.CodeGenVisitor.visitDeclaration", "modulename": "compilation", "qualname": "CodeGenVisitor.visitDeclaration", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitAssignment": {"fullname": "compilation.CodeGenVisitor.visitAssignment", "modulename": "compilation", "qualname": "CodeGenVisitor.visitAssignment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitIf": {"fullname": "compilation.CodeGenVisitor.visitIf", "modulename": "compilation", "qualname": "CodeGenVisitor.visitIf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitWhile": {"fullname": "compilation.CodeGenVisitor.visitWhile", "modulename": "compilation", "qualname": "CodeGenVisitor.visitWhile", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitBinaryOp": {"fullname": "compilation.CodeGenVisitor.visitBinaryOp", "modulename": "compilation", "qualname": "CodeGenVisitor.visitBinaryOp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitUnaryOp": {"fullname": "compilation.CodeGenVisitor.visitUnaryOp", "modulename": "compilation", "qualname": "CodeGenVisitor.visitUnaryOp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitLiteral": {"fullname": "compilation.CodeGenVisitor.visitLiteral", "modulename": "compilation", "qualname": "CodeGenVisitor.visitLiteral", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitIdentifier": {"fullname": "compilation.CodeGenVisitor.visitIdentifier", "modulename": "compilation", "qualname": "CodeGenVisitor.visitIdentifier", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.CodeGenVisitor.visitParenthesized": {"fullname": "compilation.CodeGenVisitor.visitParenthesized", "modulename": "compilation", "qualname": "CodeGenVisitor.visitParenthesized", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "compilation.test_modified_parser": {"fullname": "compilation.test_modified_parser", "modulename": "compilation", "qualname": "test_modified_parser", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"compilation": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.token_specification": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 215, "signature": 0, "bases": 0, "doc": 3}, "compilation.Token": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Token.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "compilation.Token.type": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Token.value": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Token.line": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Token.col": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.MiniCLexer": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.MiniCLexer.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "compilation.MiniCLexer.code": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.MiniCLexer.big_regex": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.MiniCLexer.tokenize": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.ASTNode": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.ASTNode.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Program": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.Program.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "compilation.Program.declarations": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Program.statements": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Program.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Block": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.Block.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "compilation.Block.declarations": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Block.statements": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Block.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Declaration": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.Declaration.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "compilation.Declaration.var_type": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Declaration.name": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Declaration.array_size": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Declaration.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Statement": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.AssignmentStatement": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.AssignmentStatement.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "compilation.AssignmentStatement.name": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.AssignmentStatement.index_expr": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.AssignmentStatement.rhs": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.AssignmentStatement.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.IfStatement": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.IfStatement.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "compilation.IfStatement.condition": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.IfStatement.then_block": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.IfStatement.else_block": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.IfStatement.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.WhileStatement": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.WhileStatement.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "compilation.WhileStatement.condition": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.WhileStatement.body": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.WhileStatement.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Expression": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.BinaryOp": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.BinaryOp.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "compilation.BinaryOp.op": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.BinaryOp.left": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.BinaryOp.right": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.BinaryOp.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.UnaryOp": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.UnaryOp.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "compilation.UnaryOp.op": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.UnaryOp.expr": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.UnaryOp.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Literal": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.Literal.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "compilation.Literal.value": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Literal.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Identifier": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.Identifier.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "compilation.Identifier.name": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Identifier.index_expr": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Identifier.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Parenthesized": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.Parenthesized.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "compilation.Parenthesized.expr": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Parenthesized.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.ParsingException": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "compilation.Parser": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Parser.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "compilation.Parser.tokens": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Parser.index": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.Parser.peek": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.peek_type": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.accept": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "compilation.Parser.expect": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Parser.finished": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.error": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.Parser.parse": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_program": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_declaration": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_type": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_statement": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_assignment": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_if": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_while": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_block": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_expression": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_or": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_and": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_equality": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_relational": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_additive": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_multiplicative": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_unary": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Parser.parse_primary": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.Visitor": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "compilation.CodeGenVisitor.code": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.var_map": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.next_addr": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.label_counter": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.emit": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.make_label": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.get_code": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.alloc_var": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitProgram": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitBlock": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitDeclaration": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitAssignment": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitIf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitWhile": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitBinaryOp": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitUnaryOp": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitLiteral": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitIdentifier": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.CodeGenVisitor.visitParenthesized": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "compilation.test_modified_parser": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}}, "length": 125, "save": true}, "index": {"qualname": {"root": {"docs": {"compilation.Token.__init__": {"tf": 1}, "compilation.MiniCLexer.__init__": {"tf": 1}, "compilation.Program.__init__": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}, "compilation.BinaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}, "compilation.Parser.__init__": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}, "compilation.Token": {"tf": 1}, "compilation.Token.__init__": {"tf": 1}, "compilation.Token.type": {"tf": 1}, "compilation.Token.value": {"tf": 1}, "compilation.Token.line": {"tf": 1}, "compilation.Token.col": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"compilation.MiniCLexer.tokenize": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"compilation.Parser.tokens": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.type": {"tf": 1}, "compilation.Declaration.var_type": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"compilation.IfStatement.then_block": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"compilation.test_modified_parser": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Statement": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}}, "df": 2, "s": {"docs": {"compilation.Program.statements": {"tf": 1}, "compilation.Block.statements": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Declaration.array_size": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Token.__init__": {"tf": 1}, "compilation.MiniCLexer.__init__": {"tf": 1}, "compilation.Program.__init__": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}, "compilation.BinaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}, "compilation.Parser.__init__": {"tf": 1}}, "df": 14}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"compilation.AssignmentStatement.index_expr": {"tf": 1}, "compilation.Identifier.index_expr": {"tf": 1}, "compilation.Parser.index": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"compilation.Parser.parse_if": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.IfStatement": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.IfStatement.condition": {"tf": 1}, "compilation.IfStatement.then_block": {"tf": 1}, "compilation.IfStatement.else_block": {"tf": 1}, "compilation.IfStatement.accept": {"tf": 1}}, "df": 6}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.Identifier": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Identifier.name": {"tf": 1}, "compilation.Identifier.index_expr": {"tf": 1}, "compilation.Identifier.accept": {"tf": 1}}, "df": 5}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.value": {"tf": 1}, "compilation.Literal.value": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"compilation.Declaration.var_type": {"tf": 1}, "compilation.CodeGenVisitor.var_map": {"tf": 1}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.Visitor": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"compilation.CodeGenVisitor.visitProgram": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.CodeGenVisitor.visitParenthesized": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"compilation.CodeGenVisitor.visitBlock": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.CodeGenVisitor.visitDeclaration": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.visitAssignment": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"compilation.CodeGenVisitor.visitIf": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.CodeGenVisitor.visitIdentifier": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"compilation.CodeGenVisitor.visitWhile": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"compilation.CodeGenVisitor.visitLiteral": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.line": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"compilation.Literal": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}, "compilation.Literal.value": {"tf": 1}, "compilation.Literal.accept": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"compilation.BinaryOp.left": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"compilation.CodeGenVisitor.label_counter": {"tf": 1}, "compilation.CodeGenVisitor.make_label": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"compilation.Token.col": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {"compilation.MiniCLexer.code": {"tf": 1}, "compilation.CodeGenVisitor.code": {"tf": 1}, "compilation.CodeGenVisitor.get_code": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.CodeGenVisitor": {"tf": 1}, "compilation.CodeGenVisitor.code": {"tf": 1}, "compilation.CodeGenVisitor.var_map": {"tf": 1}, "compilation.CodeGenVisitor.next_addr": {"tf": 1}, "compilation.CodeGenVisitor.label_counter": {"tf": 1}, "compilation.CodeGenVisitor.emit": {"tf": 1}, "compilation.CodeGenVisitor.make_label": {"tf": 1}, "compilation.CodeGenVisitor.get_code": {"tf": 1}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1}, "compilation.CodeGenVisitor.visitProgram": {"tf": 1}, "compilation.CodeGenVisitor.visitBlock": {"tf": 1}, "compilation.CodeGenVisitor.visitDeclaration": {"tf": 1}, "compilation.CodeGenVisitor.visitAssignment": {"tf": 1}, "compilation.CodeGenVisitor.visitIf": {"tf": 1}, "compilation.CodeGenVisitor.visitWhile": {"tf": 1}, "compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitLiteral": {"tf": 1}, "compilation.CodeGenVisitor.visitIdentifier": {"tf": 1}, "compilation.CodeGenVisitor.visitParenthesized": {"tf": 1}}, "df": 20}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.IfStatement.condition": {"tf": 1}, "compilation.WhileStatement.condition": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.CodeGenVisitor.label_counter": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.MiniCLexer": {"tf": 1}, "compilation.MiniCLexer.__init__": {"tf": 1}, "compilation.MiniCLexer.code": {"tf": 1}, "compilation.MiniCLexer.big_regex": {"tf": 1}, "compilation.MiniCLexer.tokenize": {"tf": 1}}, "df": 5}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Parser.parse_multiplicative": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"compilation.CodeGenVisitor.var_map": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {"compilation.CodeGenVisitor.make_label": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.test_modified_parser": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"compilation.MiniCLexer.big_regex": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.BinaryOp": {"tf": 1}, "compilation.BinaryOp.__init__": {"tf": 1}, "compilation.BinaryOp.op": {"tf": 1}, "compilation.BinaryOp.left": {"tf": 1}, "compilation.BinaryOp.right": {"tf": 1}, "compilation.BinaryOp.accept": {"tf": 1}}, "df": 6}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"compilation.Block": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}, "compilation.Block.declarations": {"tf": 1}, "compilation.Block.statements": {"tf": 1}, "compilation.Block.accept": {"tf": 1}, "compilation.IfStatement.then_block": {"tf": 1}, "compilation.IfStatement.else_block": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}}, "df": 8}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"compilation.WhileStatement.body": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"compilation.MiniCLexer.big_regex": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"compilation.Parser.parse_relational": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "s": {"docs": {"compilation.AssignmentStatement.rhs": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"compilation.BinaryOp.right": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"compilation.ASTNode": {"tf": 1}, "compilation.ASTNode.accept": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Parser.parse_assignment": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.AssignmentStatement": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.AssignmentStatement.name": {"tf": 1}, "compilation.AssignmentStatement.index_expr": {"tf": 1}, "compilation.AssignmentStatement.rhs": {"tf": 1}, "compilation.AssignmentStatement.accept": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"compilation.ASTNode.accept": {"tf": 1}, "compilation.Program.accept": {"tf": 1}, "compilation.Block.accept": {"tf": 1}, "compilation.Declaration.accept": {"tf": 1}, "compilation.AssignmentStatement.accept": {"tf": 1}, "compilation.IfStatement.accept": {"tf": 1}, "compilation.WhileStatement.accept": {"tf": 1}, "compilation.BinaryOp.accept": {"tf": 1}, "compilation.UnaryOp.accept": {"tf": 1}, "compilation.Literal.accept": {"tf": 1}, "compilation.Identifier.accept": {"tf": 1}, "compilation.Parenthesized.accept": {"tf": 1}, "compilation.Parser.accept": {"tf": 1}}, "df": 13}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Declaration.array_size": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"compilation.Parser.parse_and": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Parser.parse_additive": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"compilation.CodeGenVisitor.next_addr": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"compilation.CodeGenVisitor.alloc_var": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"compilation.Program": {"tf": 1}, "compilation.Program.__init__": {"tf": 1}, "compilation.Program.declarations": {"tf": 1}, "compilation.Program.statements": {"tf": 1}, "compilation.Program.accept": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Parser.parse_primary": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.Parenthesized": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}, "compilation.Parenthesized.expr": {"tf": 1}, "compilation.Parenthesized.accept": {"tf": 1}}, "df": 4}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {"compilation.Parser.parse": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}, "compilation.Parser.parse_assignment": {"tf": 1}, "compilation.Parser.parse_if": {"tf": 1}, "compilation.Parser.parse_while": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}, "compilation.Parser.parse_or": {"tf": 1}, "compilation.Parser.parse_and": {"tf": 1}, "compilation.Parser.parse_equality": {"tf": 1}, "compilation.Parser.parse_relational": {"tf": 1}, "compilation.Parser.parse_additive": {"tf": 1}, "compilation.Parser.parse_multiplicative": {"tf": 1}, "compilation.Parser.parse_unary": {"tf": 1}, "compilation.Parser.parse_primary": {"tf": 1}}, "df": 18, "r": {"docs": {"compilation.Parser": {"tf": 1}, "compilation.Parser.__init__": {"tf": 1}, "compilation.Parser.tokens": {"tf": 1}, "compilation.Parser.index": {"tf": 1}, "compilation.Parser.peek": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}, "compilation.Parser.accept": {"tf": 1}, "compilation.Parser.expect": {"tf": 1}, "compilation.Parser.finished": {"tf": 1}, "compilation.Parser.error": {"tf": 1}, "compilation.Parser.parse": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}, "compilation.Parser.parse_assignment": {"tf": 1}, "compilation.Parser.parse_if": {"tf": 1}, "compilation.Parser.parse_while": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}, "compilation.Parser.parse_or": {"tf": 1}, "compilation.Parser.parse_and": {"tf": 1}, "compilation.Parser.parse_equality": {"tf": 1}, "compilation.Parser.parse_relational": {"tf": 1}, "compilation.Parser.parse_additive": {"tf": 1}, "compilation.Parser.parse_multiplicative": {"tf": 1}, "compilation.Parser.parse_unary": {"tf": 1}, "compilation.Parser.parse_primary": {"tf": 1}, "compilation.test_modified_parser": {"tf": 1}}, "df": 29}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {"compilation.Parser.peek": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.Declaration": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}, "compilation.Declaration.var_type": {"tf": 1}, "compilation.Declaration.name": {"tf": 1}, "compilation.Declaration.array_size": {"tf": 1}, "compilation.Declaration.accept": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}}, "df": 7, "s": {"docs": {"compilation.Program.declarations": {"tf": 1}, "compilation.Block.declarations": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Declaration.name": {"tf": 1}, "compilation.AssignmentStatement.name": {"tf": 1}, "compilation.Identifier.name": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.next_addr": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {"compilation.AssignmentStatement.index_expr": {"tf": 1}, "compilation.UnaryOp.expr": {"tf": 1}, "compilation.Identifier.index_expr": {"tf": 1}, "compilation.Parenthesized.expr": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.Expression": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Parser.expect": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"compilation.IfStatement.else_block": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.Parser.error": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Parser.parse_equality": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.emit": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Parser.parse_while": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.WhileStatement": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}, "compilation.WhileStatement.condition": {"tf": 1}, "compilation.WhileStatement.body": {"tf": 1}, "compilation.WhileStatement.accept": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.BinaryOp.op": {"tf": 1}, "compilation.UnaryOp.op": {"tf": 1}}, "df": 2}, "r": {"docs": {"compilation.Parser.parse_or": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Parser.parse_unary": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.UnaryOp": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.op": {"tf": 1}, "compilation.UnaryOp.expr": {"tf": 1}, "compilation.UnaryOp.accept": {"tf": 1}}, "df": 5}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.Parser.finished": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.get_code": {"tf": 1}}, "df": 1}}}}}, "fullname": {"root": {"docs": {"compilation.Token.__init__": {"tf": 1}, "compilation.MiniCLexer.__init__": {"tf": 1}, "compilation.Program.__init__": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}, "compilation.BinaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}, "compilation.Parser.__init__": {"tf": 1}}, "df": 14, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation": {"tf": 1}, "compilation.token_specification": {"tf": 1}, "compilation.Token": {"tf": 1}, "compilation.Token.__init__": {"tf": 1}, "compilation.Token.type": {"tf": 1}, "compilation.Token.value": {"tf": 1}, "compilation.Token.line": {"tf": 1}, "compilation.Token.col": {"tf": 1}, "compilation.MiniCLexer": {"tf": 1}, "compilation.MiniCLexer.__init__": {"tf": 1}, "compilation.MiniCLexer.code": {"tf": 1}, "compilation.MiniCLexer.big_regex": {"tf": 1}, "compilation.MiniCLexer.tokenize": {"tf": 1}, "compilation.ASTNode": {"tf": 1}, "compilation.ASTNode.accept": {"tf": 1}, "compilation.Program": {"tf": 1}, "compilation.Program.__init__": {"tf": 1}, "compilation.Program.declarations": {"tf": 1}, "compilation.Program.statements": {"tf": 1}, "compilation.Program.accept": {"tf": 1}, "compilation.Block": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}, "compilation.Block.declarations": {"tf": 1}, "compilation.Block.statements": {"tf": 1}, "compilation.Block.accept": {"tf": 1}, "compilation.Declaration": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}, "compilation.Declaration.var_type": {"tf": 1}, "compilation.Declaration.name": {"tf": 1}, "compilation.Declaration.array_size": {"tf": 1}, "compilation.Declaration.accept": {"tf": 1}, "compilation.Statement": {"tf": 1}, "compilation.AssignmentStatement": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.AssignmentStatement.name": {"tf": 1}, "compilation.AssignmentStatement.index_expr": {"tf": 1}, "compilation.AssignmentStatement.rhs": {"tf": 1}, "compilation.AssignmentStatement.accept": {"tf": 1}, "compilation.IfStatement": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.IfStatement.condition": {"tf": 1}, "compilation.IfStatement.then_block": {"tf": 1}, "compilation.IfStatement.else_block": {"tf": 1}, "compilation.IfStatement.accept": {"tf": 1}, "compilation.WhileStatement": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}, "compilation.WhileStatement.condition": {"tf": 1}, "compilation.WhileStatement.body": {"tf": 1}, "compilation.WhileStatement.accept": {"tf": 1}, "compilation.Expression": {"tf": 1}, "compilation.BinaryOp": {"tf": 1}, "compilation.BinaryOp.__init__": {"tf": 1}, "compilation.BinaryOp.op": {"tf": 1}, "compilation.BinaryOp.left": {"tf": 1}, "compilation.BinaryOp.right": {"tf": 1}, "compilation.BinaryOp.accept": {"tf": 1}, "compilation.UnaryOp": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.op": {"tf": 1}, "compilation.UnaryOp.expr": {"tf": 1}, "compilation.UnaryOp.accept": {"tf": 1}, "compilation.Literal": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}, "compilation.Literal.value": {"tf": 1}, "compilation.Literal.accept": {"tf": 1}, "compilation.Identifier": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Identifier.name": {"tf": 1}, "compilation.Identifier.index_expr": {"tf": 1}, "compilation.Identifier.accept": {"tf": 1}, "compilation.Parenthesized": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}, "compilation.Parenthesized.expr": {"tf": 1}, "compilation.Parenthesized.accept": {"tf": 1}, "compilation.ParsingException": {"tf": 1}, "compilation.Parser": {"tf": 1}, "compilation.Parser.__init__": {"tf": 1}, "compilation.Parser.tokens": {"tf": 1}, "compilation.Parser.index": {"tf": 1}, "compilation.Parser.peek": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}, "compilation.Parser.accept": {"tf": 1}, "compilation.Parser.expect": {"tf": 1}, "compilation.Parser.finished": {"tf": 1}, "compilation.Parser.error": {"tf": 1}, "compilation.Parser.parse": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}, "compilation.Parser.parse_assignment": {"tf": 1}, "compilation.Parser.parse_if": {"tf": 1}, "compilation.Parser.parse_while": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}, "compilation.Parser.parse_or": {"tf": 1}, "compilation.Parser.parse_and": {"tf": 1}, "compilation.Parser.parse_equality": {"tf": 1}, "compilation.Parser.parse_relational": {"tf": 1}, "compilation.Parser.parse_additive": {"tf": 1}, "compilation.Parser.parse_multiplicative": {"tf": 1}, "compilation.Parser.parse_unary": {"tf": 1}, "compilation.Parser.parse_primary": {"tf": 1}, "compilation.Visitor": {"tf": 1}, "compilation.CodeGenVisitor": {"tf": 1}, "compilation.CodeGenVisitor.code": {"tf": 1}, "compilation.CodeGenVisitor.var_map": {"tf": 1}, "compilation.CodeGenVisitor.next_addr": {"tf": 1}, "compilation.CodeGenVisitor.label_counter": {"tf": 1}, "compilation.CodeGenVisitor.emit": {"tf": 1}, "compilation.CodeGenVisitor.make_label": {"tf": 1}, "compilation.CodeGenVisitor.get_code": {"tf": 1}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1}, "compilation.CodeGenVisitor.visitProgram": {"tf": 1}, "compilation.CodeGenVisitor.visitBlock": {"tf": 1}, "compilation.CodeGenVisitor.visitDeclaration": {"tf": 1}, "compilation.CodeGenVisitor.visitAssignment": {"tf": 1}, "compilation.CodeGenVisitor.visitIf": {"tf": 1}, "compilation.CodeGenVisitor.visitWhile": {"tf": 1}, "compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitLiteral": {"tf": 1}, "compilation.CodeGenVisitor.visitIdentifier": {"tf": 1}, "compilation.CodeGenVisitor.visitParenthesized": {"tf": 1}, "compilation.test_modified_parser": {"tf": 1}}, "df": 125}}}}}}}}}, "l": {"docs": {"compilation.Token.col": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {"compilation.MiniCLexer.code": {"tf": 1}, "compilation.CodeGenVisitor.code": {"tf": 1}, "compilation.CodeGenVisitor.get_code": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.CodeGenVisitor": {"tf": 1}, "compilation.CodeGenVisitor.code": {"tf": 1}, "compilation.CodeGenVisitor.var_map": {"tf": 1}, "compilation.CodeGenVisitor.next_addr": {"tf": 1}, "compilation.CodeGenVisitor.label_counter": {"tf": 1}, "compilation.CodeGenVisitor.emit": {"tf": 1}, "compilation.CodeGenVisitor.make_label": {"tf": 1}, "compilation.CodeGenVisitor.get_code": {"tf": 1}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1}, "compilation.CodeGenVisitor.visitProgram": {"tf": 1}, "compilation.CodeGenVisitor.visitBlock": {"tf": 1}, "compilation.CodeGenVisitor.visitDeclaration": {"tf": 1}, "compilation.CodeGenVisitor.visitAssignment": {"tf": 1}, "compilation.CodeGenVisitor.visitIf": {"tf": 1}, "compilation.CodeGenVisitor.visitWhile": {"tf": 1}, "compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitLiteral": {"tf": 1}, "compilation.CodeGenVisitor.visitIdentifier": {"tf": 1}, "compilation.CodeGenVisitor.visitParenthesized": {"tf": 1}}, "df": 20}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.IfStatement.condition": {"tf": 1}, "compilation.WhileStatement.condition": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.CodeGenVisitor.label_counter": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}, "compilation.Token": {"tf": 1}, "compilation.Token.__init__": {"tf": 1}, "compilation.Token.type": {"tf": 1}, "compilation.Token.value": {"tf": 1}, "compilation.Token.line": {"tf": 1}, "compilation.Token.col": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"compilation.MiniCLexer.tokenize": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"compilation.Parser.tokens": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.type": {"tf": 1}, "compilation.Declaration.var_type": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"compilation.IfStatement.then_block": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"compilation.test_modified_parser": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Statement": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}}, "df": 2, "s": {"docs": {"compilation.Program.statements": {"tf": 1}, "compilation.Block.statements": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Declaration.array_size": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Token.__init__": {"tf": 1}, "compilation.MiniCLexer.__init__": {"tf": 1}, "compilation.Program.__init__": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}, "compilation.BinaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}, "compilation.Parser.__init__": {"tf": 1}}, "df": 14}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"compilation.AssignmentStatement.index_expr": {"tf": 1}, "compilation.Identifier.index_expr": {"tf": 1}, "compilation.Parser.index": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {"compilation.Parser.parse_if": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.IfStatement": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.IfStatement.condition": {"tf": 1}, "compilation.IfStatement.then_block": {"tf": 1}, "compilation.IfStatement.else_block": {"tf": 1}, "compilation.IfStatement.accept": {"tf": 1}}, "df": 6}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.Identifier": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Identifier.name": {"tf": 1}, "compilation.Identifier.index_expr": {"tf": 1}, "compilation.Identifier.accept": {"tf": 1}}, "df": 5}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.value": {"tf": 1}, "compilation.Literal.value": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"compilation.Declaration.var_type": {"tf": 1}, "compilation.CodeGenVisitor.var_map": {"tf": 1}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.Visitor": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"compilation.CodeGenVisitor.visitProgram": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.CodeGenVisitor.visitParenthesized": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"compilation.CodeGenVisitor.visitBlock": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.CodeGenVisitor.visitDeclaration": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.visitAssignment": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"compilation.CodeGenVisitor.visitIf": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.CodeGenVisitor.visitIdentifier": {"tf": 1}}, "df": 1}}}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"compilation.CodeGenVisitor.visitWhile": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"compilation.CodeGenVisitor.visitLiteral": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.line": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"compilation.Literal": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}, "compilation.Literal.value": {"tf": 1}, "compilation.Literal.accept": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"compilation.BinaryOp.left": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"compilation.CodeGenVisitor.label_counter": {"tf": 1}, "compilation.CodeGenVisitor.make_label": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"compilation.MiniCLexer": {"tf": 1}, "compilation.MiniCLexer.__init__": {"tf": 1}, "compilation.MiniCLexer.code": {"tf": 1}, "compilation.MiniCLexer.big_regex": {"tf": 1}, "compilation.MiniCLexer.tokenize": {"tf": 1}}, "df": 5}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Parser.parse_multiplicative": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"compilation.CodeGenVisitor.var_map": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {"compilation.CodeGenVisitor.make_label": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.test_modified_parser": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"compilation.MiniCLexer.big_regex": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.BinaryOp": {"tf": 1}, "compilation.BinaryOp.__init__": {"tf": 1}, "compilation.BinaryOp.op": {"tf": 1}, "compilation.BinaryOp.left": {"tf": 1}, "compilation.BinaryOp.right": {"tf": 1}, "compilation.BinaryOp.accept": {"tf": 1}}, "df": 6}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"compilation.Block": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}, "compilation.Block.declarations": {"tf": 1}, "compilation.Block.statements": {"tf": 1}, "compilation.Block.accept": {"tf": 1}, "compilation.IfStatement.then_block": {"tf": 1}, "compilation.IfStatement.else_block": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}}, "df": 8}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"compilation.WhileStatement.body": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"compilation.MiniCLexer.big_regex": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"compilation.Parser.parse_relational": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "s": {"docs": {"compilation.AssignmentStatement.rhs": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"compilation.BinaryOp.right": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"compilation.ASTNode": {"tf": 1}, "compilation.ASTNode.accept": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Parser.parse_assignment": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.AssignmentStatement": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.AssignmentStatement.name": {"tf": 1}, "compilation.AssignmentStatement.index_expr": {"tf": 1}, "compilation.AssignmentStatement.rhs": {"tf": 1}, "compilation.AssignmentStatement.accept": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"compilation.ASTNode.accept": {"tf": 1}, "compilation.Program.accept": {"tf": 1}, "compilation.Block.accept": {"tf": 1}, "compilation.Declaration.accept": {"tf": 1}, "compilation.AssignmentStatement.accept": {"tf": 1}, "compilation.IfStatement.accept": {"tf": 1}, "compilation.WhileStatement.accept": {"tf": 1}, "compilation.BinaryOp.accept": {"tf": 1}, "compilation.UnaryOp.accept": {"tf": 1}, "compilation.Literal.accept": {"tf": 1}, "compilation.Identifier.accept": {"tf": 1}, "compilation.Parenthesized.accept": {"tf": 1}, "compilation.Parser.accept": {"tf": 1}}, "df": 13}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Declaration.array_size": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"compilation.Parser.parse_and": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Parser.parse_additive": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"compilation.CodeGenVisitor.next_addr": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {"compilation.CodeGenVisitor.alloc_var": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"compilation.Program": {"tf": 1}, "compilation.Program.__init__": {"tf": 1}, "compilation.Program.declarations": {"tf": 1}, "compilation.Program.statements": {"tf": 1}, "compilation.Program.accept": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Parser.parse_primary": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.Parenthesized": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}, "compilation.Parenthesized.expr": {"tf": 1}, "compilation.Parenthesized.accept": {"tf": 1}}, "df": 4}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {"compilation.Parser.parse": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}, "compilation.Parser.parse_assignment": {"tf": 1}, "compilation.Parser.parse_if": {"tf": 1}, "compilation.Parser.parse_while": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}, "compilation.Parser.parse_or": {"tf": 1}, "compilation.Parser.parse_and": {"tf": 1}, "compilation.Parser.parse_equality": {"tf": 1}, "compilation.Parser.parse_relational": {"tf": 1}, "compilation.Parser.parse_additive": {"tf": 1}, "compilation.Parser.parse_multiplicative": {"tf": 1}, "compilation.Parser.parse_unary": {"tf": 1}, "compilation.Parser.parse_primary": {"tf": 1}}, "df": 18, "r": {"docs": {"compilation.Parser": {"tf": 1}, "compilation.Parser.__init__": {"tf": 1}, "compilation.Parser.tokens": {"tf": 1}, "compilation.Parser.index": {"tf": 1}, "compilation.Parser.peek": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}, "compilation.Parser.accept": {"tf": 1}, "compilation.Parser.expect": {"tf": 1}, "compilation.Parser.finished": {"tf": 1}, "compilation.Parser.error": {"tf": 1}, "compilation.Parser.parse": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}, "compilation.Parser.parse_assignment": {"tf": 1}, "compilation.Parser.parse_if": {"tf": 1}, "compilation.Parser.parse_while": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}, "compilation.Parser.parse_or": {"tf": 1}, "compilation.Parser.parse_and": {"tf": 1}, "compilation.Parser.parse_equality": {"tf": 1}, "compilation.Parser.parse_relational": {"tf": 1}, "compilation.Parser.parse_additive": {"tf": 1}, "compilation.Parser.parse_multiplicative": {"tf": 1}, "compilation.Parser.parse_unary": {"tf": 1}, "compilation.Parser.parse_primary": {"tf": 1}, "compilation.test_modified_parser": {"tf": 1}}, "df": 29}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {"compilation.Parser.peek": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.Declaration": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}, "compilation.Declaration.var_type": {"tf": 1}, "compilation.Declaration.name": {"tf": 1}, "compilation.Declaration.array_size": {"tf": 1}, "compilation.Declaration.accept": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}}, "df": 7, "s": {"docs": {"compilation.Program.declarations": {"tf": 1}, "compilation.Block.declarations": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Declaration.name": {"tf": 1}, "compilation.AssignmentStatement.name": {"tf": 1}, "compilation.Identifier.name": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.next_addr": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {"compilation.AssignmentStatement.index_expr": {"tf": 1}, "compilation.UnaryOp.expr": {"tf": 1}, "compilation.Identifier.index_expr": {"tf": 1}, "compilation.Parenthesized.expr": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.Expression": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"compilation.Parser.expect": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"compilation.IfStatement.else_block": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.Parser.error": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Parser.parse_equality": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.emit": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Parser.parse_while": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.WhileStatement": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}, "compilation.WhileStatement.condition": {"tf": 1}, "compilation.WhileStatement.body": {"tf": 1}, "compilation.WhileStatement.accept": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.BinaryOp.op": {"tf": 1}, "compilation.UnaryOp.op": {"tf": 1}}, "df": 2}, "r": {"docs": {"compilation.Parser.parse_or": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Parser.parse_unary": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.UnaryOp": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.op": {"tf": 1}, "compilation.UnaryOp.expr": {"tf": 1}, "compilation.UnaryOp.accept": {"tf": 1}}, "df": 5}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.Parser.finished": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"compilation.CodeGenVisitor.get_code": {"tf": 1}}, "df": 1}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"compilation.token_specification": {"tf": 4}}, "df": 1, "x": {"2": {"7": {"docs": {"compilation.token_specification": {"tf": 11.575836902790225}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "s": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "s": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"compilation.token_specification": {"tf": 1.7320508075688772}}, "df": 1}}, "t": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "b": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {"compilation.token_specification": {"tf": 2.8284271247461903}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.token_specification": {"tf": 1.4142135623730951}}, "df": 1}}, "f": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}, "w": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"compilation.token_specification": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "p": {"docs": {"compilation.token_specification": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1, "a": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"compilation.token_specification": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"compilation.token_specification": {"tf": 1}}, "df": 1}}}}}}, "signature": {"root": {"3": {"9": {"docs": {"compilation.CodeGenVisitor.make_label": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"compilation.Token.__init__": {"tf": 4.58257569495584}, "compilation.MiniCLexer.__init__": {"tf": 2.8284271247461903}, "compilation.MiniCLexer.tokenize": {"tf": 3.1622776601683795}, "compilation.ASTNode.accept": {"tf": 3.7416573867739413}, "compilation.Program.__init__": {"tf": 3.4641016151377544}, "compilation.Program.accept": {"tf": 3.7416573867739413}, "compilation.Block.__init__": {"tf": 3.4641016151377544}, "compilation.Block.accept": {"tf": 3.7416573867739413}, "compilation.Declaration.__init__": {"tf": 4.47213595499958}, "compilation.Declaration.accept": {"tf": 3.7416573867739413}, "compilation.AssignmentStatement.__init__": {"tf": 4}, "compilation.AssignmentStatement.accept": {"tf": 3.7416573867739413}, "compilation.IfStatement.__init__": {"tf": 4.47213595499958}, "compilation.IfStatement.accept": {"tf": 3.7416573867739413}, "compilation.WhileStatement.__init__": {"tf": 3.4641016151377544}, "compilation.WhileStatement.accept": {"tf": 3.7416573867739413}, "compilation.BinaryOp.__init__": {"tf": 4}, "compilation.BinaryOp.accept": {"tf": 3.7416573867739413}, "compilation.UnaryOp.__init__": {"tf": 3.4641016151377544}, "compilation.UnaryOp.accept": {"tf": 3.7416573867739413}, "compilation.Literal.__init__": {"tf": 2.8284271247461903}, "compilation.Literal.accept": {"tf": 3.7416573867739413}, "compilation.Identifier.__init__": {"tf": 4}, "compilation.Identifier.accept": {"tf": 3.7416573867739413}, "compilation.Parenthesized.__init__": {"tf": 2.8284271247461903}, "compilation.Parenthesized.accept": {"tf": 3.7416573867739413}, "compilation.Parser.__init__": {"tf": 2.8284271247461903}, "compilation.Parser.peek": {"tf": 3.1622776601683795}, "compilation.Parser.peek_type": {"tf": 3.1622776601683795}, "compilation.Parser.accept": {"tf": 4.242640687119285}, "compilation.Parser.expect": {"tf": 3.7416573867739413}, "compilation.Parser.finished": {"tf": 3.1622776601683795}, "compilation.Parser.error": {"tf": 3.7416573867739413}, "compilation.Parser.parse": {"tf": 3.1622776601683795}, "compilation.Parser.parse_program": {"tf": 3.1622776601683795}, "compilation.Parser.parse_declaration": {"tf": 3.1622776601683795}, "compilation.Parser.parse_type": {"tf": 3.1622776601683795}, "compilation.Parser.parse_statement": {"tf": 3.1622776601683795}, "compilation.Parser.parse_assignment": {"tf": 3.1622776601683795}, "compilation.Parser.parse_if": {"tf": 3.1622776601683795}, "compilation.Parser.parse_while": {"tf": 3.1622776601683795}, "compilation.Parser.parse_block": {"tf": 3.1622776601683795}, "compilation.Parser.parse_expression": {"tf": 3.1622776601683795}, "compilation.Parser.parse_or": {"tf": 3.1622776601683795}, "compilation.Parser.parse_and": {"tf": 3.1622776601683795}, "compilation.Parser.parse_equality": {"tf": 3.1622776601683795}, "compilation.Parser.parse_relational": {"tf": 3.1622776601683795}, "compilation.Parser.parse_additive": {"tf": 3.1622776601683795}, "compilation.Parser.parse_multiplicative": {"tf": 3.1622776601683795}, "compilation.Parser.parse_unary": {"tf": 3.1622776601683795}, "compilation.Parser.parse_primary": {"tf": 3.1622776601683795}, "compilation.CodeGenVisitor.emit": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.make_label": {"tf": 4.47213595499958}, "compilation.CodeGenVisitor.get_code": {"tf": 3.1622776601683795}, "compilation.CodeGenVisitor.alloc_var": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitProgram": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitBlock": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitDeclaration": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitAssignment": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitIf": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitWhile": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitBinaryOp": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitUnaryOp": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitLiteral": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitIdentifier": {"tf": 3.7416573867739413}, "compilation.CodeGenVisitor.visitParenthesized": {"tf": 3.7416573867739413}, "compilation.test_modified_parser": {"tf": 2.6457513110645907}}, "df": 67, "t": {"docs": {"compilation.Parser.expect": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.__init__": {"tf": 1}, "compilation.Declaration.__init__": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"compilation.IfStatement.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"compilation.Parser.__init__": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.__init__": {"tf": 1}, "compilation.Literal.__init__": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"compilation.Declaration.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.ASTNode.accept": {"tf": 1}, "compilation.Program.accept": {"tf": 1}, "compilation.Block.accept": {"tf": 1}, "compilation.Declaration.accept": {"tf": 1}, "compilation.AssignmentStatement.accept": {"tf": 1}, "compilation.IfStatement.accept": {"tf": 1}, "compilation.WhileStatement.accept": {"tf": 1}, "compilation.BinaryOp.accept": {"tf": 1}, "compilation.UnaryOp.accept": {"tf": 1}, "compilation.Literal.accept": {"tf": 1}, "compilation.Identifier.accept": {"tf": 1}, "compilation.Parenthesized.accept": {"tf": 1}}, "df": 12}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Token.__init__": {"tf": 1}, "compilation.CodeGenVisitor.emit": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"compilation.BinaryOp.__init__": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {"compilation.CodeGenVisitor.make_label": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"compilation.Token.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "e": {"docs": {"compilation.MiniCLexer.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.IfStatement.__init__": {"tf": 1}, "compilation.WhileStatement.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"compilation.MiniCLexer.tokenize": {"tf": 1}, "compilation.ASTNode.accept": {"tf": 1}, "compilation.Program.accept": {"tf": 1}, "compilation.Block.accept": {"tf": 1}, "compilation.Declaration.accept": {"tf": 1}, "compilation.AssignmentStatement.accept": {"tf": 1}, "compilation.IfStatement.accept": {"tf": 1}, "compilation.WhileStatement.accept": {"tf": 1}, "compilation.BinaryOp.accept": {"tf": 1}, "compilation.UnaryOp.accept": {"tf": 1}, "compilation.Literal.accept": {"tf": 1}, "compilation.Identifier.accept": {"tf": 1}, "compilation.Parenthesized.accept": {"tf": 1}, "compilation.Parser.peek": {"tf": 1}, "compilation.Parser.peek_type": {"tf": 1}, "compilation.Parser.accept": {"tf": 1}, "compilation.Parser.expect": {"tf": 1}, "compilation.Parser.finished": {"tf": 1}, "compilation.Parser.error": {"tf": 1}, "compilation.Parser.parse": {"tf": 1}, "compilation.Parser.parse_program": {"tf": 1}, "compilation.Parser.parse_declaration": {"tf": 1}, "compilation.Parser.parse_type": {"tf": 1}, "compilation.Parser.parse_statement": {"tf": 1}, "compilation.Parser.parse_assignment": {"tf": 1}, "compilation.Parser.parse_if": {"tf": 1}, "compilation.Parser.parse_while": {"tf": 1}, "compilation.Parser.parse_block": {"tf": 1}, "compilation.Parser.parse_expression": {"tf": 1}, "compilation.Parser.parse_or": {"tf": 1}, "compilation.Parser.parse_and": {"tf": 1}, "compilation.Parser.parse_equality": {"tf": 1}, "compilation.Parser.parse_relational": {"tf": 1}, "compilation.Parser.parse_additive": {"tf": 1}, "compilation.Parser.parse_multiplicative": {"tf": 1}, "compilation.Parser.parse_unary": {"tf": 1}, "compilation.Parser.parse_primary": {"tf": 1}, "compilation.CodeGenVisitor.emit": {"tf": 1}, "compilation.CodeGenVisitor.make_label": {"tf": 1}, "compilation.CodeGenVisitor.get_code": {"tf": 1}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1}, "compilation.CodeGenVisitor.visitProgram": {"tf": 1}, "compilation.CodeGenVisitor.visitBlock": {"tf": 1}, "compilation.CodeGenVisitor.visitDeclaration": {"tf": 1}, "compilation.CodeGenVisitor.visitAssignment": {"tf": 1}, "compilation.CodeGenVisitor.visitIf": {"tf": 1}, "compilation.CodeGenVisitor.visitWhile": {"tf": 1}, "compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitLiteral": {"tf": 1}, "compilation.CodeGenVisitor.visitIdentifier": {"tf": 1}, "compilation.CodeGenVisitor.visitParenthesized": {"tf": 1}}, "df": 52}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"compilation.Program.__init__": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Declaration.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"compilation.Program.__init__": {"tf": 1}, "compilation.Block.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Declaration.__init__": {"tf": 1}, "compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Declaration.__init__": {"tf": 1}, "compilation.IfStatement.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Parser.accept": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"compilation.CodeGenVisitor.visitProgram": {"tf": 1}, "compilation.CodeGenVisitor.visitBlock": {"tf": 1}, "compilation.CodeGenVisitor.visitDeclaration": {"tf": 1}, "compilation.CodeGenVisitor.visitAssignment": {"tf": 1}, "compilation.CodeGenVisitor.visitIf": {"tf": 1}, "compilation.CodeGenVisitor.visitWhile": {"tf": 1}, "compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1}, "compilation.CodeGenVisitor.visitLiteral": {"tf": 1}, "compilation.CodeGenVisitor.visitIdentifier": {"tf": 1}, "compilation.CodeGenVisitor.visitParenthesized": {"tf": 1}}, "df": 11}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"compilation.Declaration.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {"compilation.AssignmentStatement.__init__": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}, "compilation.Identifier.__init__": {"tf": 1}, "compilation.Parenthesized.__init__": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"compilation.Parser.accept": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"compilation.IfStatement.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"compilation.AssignmentStatement.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"compilation.BinaryOp.__init__": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"compilation.IfStatement.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"compilation.WhileStatement.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"compilation.BinaryOp.__init__": {"tf": 1}, "compilation.UnaryOp.__init__": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "g": {"docs": {"compilation.Parser.error": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"compilation.CodeGenVisitor.make_label": {"tf": 1}}, "df": 1}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"compilation.Program": {"tf": 1}, "compilation.Block": {"tf": 1}, "compilation.Declaration": {"tf": 1}, "compilation.Statement": {"tf": 1}, "compilation.Expression": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"compilation.AssignmentStatement": {"tf": 1}, "compilation.IfStatement": {"tf": 1}, "compilation.WhileStatement": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.BinaryOp": {"tf": 1}, "compilation.UnaryOp": {"tf": 1}, "compilation.Literal": {"tf": 1}, "compilation.Identifier": {"tf": 1}, "compilation.Parenthesized": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.CodeGenVisitor": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"docs": {"compilation": {"tf": 1.7320508075688772}, "compilation.token_specification": {"tf": 1.7320508075688772}, "compilation.Token": {"tf": 1.7320508075688772}, "compilation.Token.__init__": {"tf": 1.7320508075688772}, "compilation.Token.type": {"tf": 1.7320508075688772}, "compilation.Token.value": {"tf": 1.7320508075688772}, "compilation.Token.line": {"tf": 1.7320508075688772}, "compilation.Token.col": {"tf": 1.7320508075688772}, "compilation.MiniCLexer": {"tf": 1.7320508075688772}, "compilation.MiniCLexer.__init__": {"tf": 1.7320508075688772}, "compilation.MiniCLexer.code": {"tf": 1.7320508075688772}, "compilation.MiniCLexer.big_regex": {"tf": 1.7320508075688772}, "compilation.MiniCLexer.tokenize": {"tf": 1.7320508075688772}, "compilation.ASTNode": {"tf": 1.7320508075688772}, "compilation.ASTNode.accept": {"tf": 1.7320508075688772}, "compilation.Program": {"tf": 1.7320508075688772}, "compilation.Program.__init__": {"tf": 1.7320508075688772}, "compilation.Program.declarations": {"tf": 1.7320508075688772}, "compilation.Program.statements": {"tf": 1.7320508075688772}, "compilation.Program.accept": {"tf": 1.7320508075688772}, "compilation.Block": {"tf": 1.7320508075688772}, "compilation.Block.__init__": {"tf": 1.7320508075688772}, "compilation.Block.declarations": {"tf": 1.7320508075688772}, "compilation.Block.statements": {"tf": 1.7320508075688772}, "compilation.Block.accept": {"tf": 1.7320508075688772}, "compilation.Declaration": {"tf": 1.7320508075688772}, "compilation.Declaration.__init__": {"tf": 1.7320508075688772}, "compilation.Declaration.var_type": {"tf": 1.7320508075688772}, "compilation.Declaration.name": {"tf": 1.7320508075688772}, "compilation.Declaration.array_size": {"tf": 1.7320508075688772}, "compilation.Declaration.accept": {"tf": 1.7320508075688772}, "compilation.Statement": {"tf": 1.7320508075688772}, "compilation.AssignmentStatement": {"tf": 1.7320508075688772}, "compilation.AssignmentStatement.__init__": {"tf": 1.7320508075688772}, "compilation.AssignmentStatement.name": {"tf": 1.7320508075688772}, "compilation.AssignmentStatement.index_expr": {"tf": 1.7320508075688772}, "compilation.AssignmentStatement.rhs": {"tf": 1.7320508075688772}, "compilation.AssignmentStatement.accept": {"tf": 1.7320508075688772}, "compilation.IfStatement": {"tf": 1.7320508075688772}, "compilation.IfStatement.__init__": {"tf": 1.7320508075688772}, "compilation.IfStatement.condition": {"tf": 1.7320508075688772}, "compilation.IfStatement.then_block": {"tf": 1.7320508075688772}, "compilation.IfStatement.else_block": {"tf": 1.7320508075688772}, "compilation.IfStatement.accept": {"tf": 1.7320508075688772}, "compilation.WhileStatement": {"tf": 1.7320508075688772}, "compilation.WhileStatement.__init__": {"tf": 1.7320508075688772}, "compilation.WhileStatement.condition": {"tf": 1.7320508075688772}, "compilation.WhileStatement.body": {"tf": 1.7320508075688772}, "compilation.WhileStatement.accept": {"tf": 1.7320508075688772}, "compilation.Expression": {"tf": 1.7320508075688772}, "compilation.BinaryOp": {"tf": 1.7320508075688772}, "compilation.BinaryOp.__init__": {"tf": 1.7320508075688772}, "compilation.BinaryOp.op": {"tf": 1.7320508075688772}, "compilation.BinaryOp.left": {"tf": 1.7320508075688772}, "compilation.BinaryOp.right": {"tf": 1.7320508075688772}, "compilation.BinaryOp.accept": {"tf": 1.7320508075688772}, "compilation.UnaryOp": {"tf": 1.7320508075688772}, "compilation.UnaryOp.__init__": {"tf": 1.7320508075688772}, "compilation.UnaryOp.op": {"tf": 1.7320508075688772}, "compilation.UnaryOp.expr": {"tf": 1.7320508075688772}, "compilation.UnaryOp.accept": {"tf": 1.7320508075688772}, "compilation.Literal": {"tf": 1.7320508075688772}, "compilation.Literal.__init__": {"tf": 1.7320508075688772}, "compilation.Literal.value": {"tf": 1.7320508075688772}, "compilation.Literal.accept": {"tf": 1.7320508075688772}, "compilation.Identifier": {"tf": 1.7320508075688772}, "compilation.Identifier.__init__": {"tf": 1.7320508075688772}, "compilation.Identifier.name": {"tf": 1.7320508075688772}, "compilation.Identifier.index_expr": {"tf": 1.7320508075688772}, "compilation.Identifier.accept": {"tf": 1.7320508075688772}, "compilation.Parenthesized": {"tf": 1.7320508075688772}, "compilation.Parenthesized.__init__": {"tf": 1.7320508075688772}, "compilation.Parenthesized.expr": {"tf": 1.7320508075688772}, "compilation.Parenthesized.accept": {"tf": 1.7320508075688772}, "compilation.ParsingException": {"tf": 1.7320508075688772}, "compilation.Parser": {"tf": 1.7320508075688772}, "compilation.Parser.__init__": {"tf": 1.7320508075688772}, "compilation.Parser.tokens": {"tf": 1.7320508075688772}, "compilation.Parser.index": {"tf": 1.7320508075688772}, "compilation.Parser.peek": {"tf": 1.7320508075688772}, "compilation.Parser.peek_type": {"tf": 1.7320508075688772}, "compilation.Parser.accept": {"tf": 1.7320508075688772}, "compilation.Parser.expect": {"tf": 1.7320508075688772}, "compilation.Parser.finished": {"tf": 1.7320508075688772}, "compilation.Parser.error": {"tf": 1.7320508075688772}, "compilation.Parser.parse": {"tf": 1.7320508075688772}, "compilation.Parser.parse_program": {"tf": 1.7320508075688772}, "compilation.Parser.parse_declaration": {"tf": 1.7320508075688772}, "compilation.Parser.parse_type": {"tf": 1.7320508075688772}, "compilation.Parser.parse_statement": {"tf": 1.7320508075688772}, "compilation.Parser.parse_assignment": {"tf": 1.7320508075688772}, "compilation.Parser.parse_if": {"tf": 1.7320508075688772}, "compilation.Parser.parse_while": {"tf": 1.7320508075688772}, "compilation.Parser.parse_block": {"tf": 1.7320508075688772}, "compilation.Parser.parse_expression": {"tf": 1.7320508075688772}, "compilation.Parser.parse_or": {"tf": 1.7320508075688772}, "compilation.Parser.parse_and": {"tf": 1.7320508075688772}, "compilation.Parser.parse_equality": {"tf": 1.7320508075688772}, "compilation.Parser.parse_relational": {"tf": 1.7320508075688772}, "compilation.Parser.parse_additive": {"tf": 1.7320508075688772}, "compilation.Parser.parse_multiplicative": {"tf": 1.7320508075688772}, "compilation.Parser.parse_unary": {"tf": 1.7320508075688772}, "compilation.Parser.parse_primary": {"tf": 1.7320508075688772}, "compilation.Visitor": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.code": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.var_map": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.next_addr": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.label_counter": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.emit": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.make_label": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.get_code": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.alloc_var": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitProgram": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitBlock": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitDeclaration": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitAssignment": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitIf": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitWhile": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitBinaryOp": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitUnaryOp": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitLiteral": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitIdentifier": {"tf": 1.7320508075688772}, "compilation.CodeGenVisitor.visitParenthesized": {"tf": 1.7320508075688772}, "compilation.test_modified_parser": {"tf": 1.7320508075688772}}, "df": 125, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"compilation.ParsingException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();